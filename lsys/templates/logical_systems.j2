{% for system in systems %}
system {
    login {
        class super-{{ system }} {
            permissions all;
            logical-system {{ system }};
        }
        user {{ system }} {
            class super-{{ system }};
            authentication {
                encrypted-password "{{ netconf_encrypted }}"; ## SECRET-DATA
                ssh-rsa "{{ netconf_key }}"; ## SECRET-DATA
            }
        }
    }
}
{% endfor %}
logical-systems { 
{% for system in systems %}
    {{ system }} {
        routing-options { 
            autonomous-system {{ systems[system].local_as }};
            router-id {{ systems[system].ipv4_loopback.split('/')[0] }};
        }
{% include 'lsys/templates/interfaces.j2' ignore missing %}
        protocols {
{% if systems[system].ibgp %}{% if systems[system].igp == 'ospf' %}
{% include 'lsys/templates/ospf.j2' ignore missing %}
{% elif systems[system].igp == 'isis' %}
{% include 'lsys/templates/isis.j2' ignore missing %}
{% endif %}
{% if systems[system].mpls == 'rsvp' %}
{% include 'lsys/templates/rsvp.j2' ignore missing %}
{% elif systems[system].mpls == 'ldp' %}
{% include 'lsys/templates/ldp.j2' ignore missing %}
{% endif %}
{% endif %}
{% include 'lsys/templates/bgp.j2' ignore missing %}
        }
        policy-options {
            policy-statement NHS {
                from {
                    protocol bgp;
                    route-type external;
                }
                then {
                    next-hop self;
                }
            }
            policy-statement ADV-LOCAL {   
                from protocol [ local direct ];
                then accept;            
            }
            policy-statement REJECT-ALL {
                then reject;
            }
            policy-statement ADV-LOOPBACKS {
                term 1 {
                    from {
                        protocol [ direct local isis ospf ];
                        route-filter 192.168.1.0/24 orlonger;
                    }
                    then accept;
                }
            }                           
        }
    }
{% endfor %}
}

